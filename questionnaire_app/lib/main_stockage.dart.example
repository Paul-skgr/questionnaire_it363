import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:questionnaire_app/firebase_options.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'JSON Firestore',
      home: JsonToFirestorePage(),
    );
  }
}

class JsonToFirestorePage extends StatelessWidget {
  final FirebaseFirestore firestore = FirebaseFirestore.instance;

  // Votre JSON
  final Map<String, dynamic> jsonData = {
  "Loisirs": [
    {
      "question": "Quel est le nom du personnage principal du jeu vidéo 'The Legend of Zelda' ?",
      "correct_answer": "Link",
      "options": ["Link", "Zelda", "Ganon", "Samus"],
      "category": "Loisirs",
      "type": "single-choice",
      "id": 1,
      "difficulty": 0
    },
    {
      "question": "Version difficile 1",
      "correct_answer": "Link",
      "options": ["Link", "Zelda", "Ganon", "Samus"],
      "category": "Loisirs",
      "type": "single-choice",
      "id": 1,
      "difficulty": 1
    },
    {
      "question": "Quelle personnage ne fais PAS partie d'un univers de Mario?",
      "correct_answer": "Scrupulous Fingore",
      "options": [
        "Booster",
        "Scrupulous Fingore",
        "Swanky Kong",
        "Daruma Otoshi Kun"
      ],
      "images": [
        "assets/images/Booster.png",
        "assets/images/Scrupulous_Fingore.png",
        "assets/images/Swanky_Kong.png",
        "assets/images/Daruma_Otoshi_Kun.png"
      ],
      "category": "Loisirs",
      "type": "images",
      "id": 2,
      "difficulty": 1
    },
    {
      "question": "Version facile 2",
      "correct_answer": "Link",
      "options": ["Link", "Zelda", "Ganon", "Samus"],
      "category": "Loisirs",
      "type": "single-choice",
      "id": 2,
      "difficulty": 0
    },
    {
      "question": "Version facile 3",
      "correct_answer": "Link",
      "options": ["Link", "Zelda", "Ganon", "Samus"],
      "category": "Loisirs",
      "type": "single-choice",
      "id": 3,
      "difficulty": 0
    },
    {
      "question": "Version difficile 3",
      "correct_answer": "Link",
      "options": ["Link", "Zelda", "Ganon", "Samus"],
      "category": "Loisirs",
      "type": "single-choice",
      "id": 3,
      "difficulty": 1
    },
    {
      "question": "(Choix multiples) Quels sont des ennemis de Mario",
      "correct_answer": "Goomba, Koopa Troopa, Boo",
      "options": ["Goomba", "Koopa Troopa", "Professeur K.Tastroph", "Boo"],
      "category": "Loisirs",
      "type": "multiple-choice",
      "id": 4,
      "difficulty": 0
    },
    {
      "question": "(Choix multiples) Quels sont des ennemis de Link dans The Legend Of Zelda",
      "correct_answer": "Octorok, zoras des rivières",
      "options": ["Octorok", "gorons", "zoras des rivières", "l'arbre Mojo"],
      "category": "Loisirs",
      "type": "multiple-choice",
      "id": 4,
      "difficulty": 1
    }
  ]
};

  // Fonction pour stocker le JSON dans Firestore
  Future<void> saveJsonToFirestore() async {
    try {
      // Itération sur chaque catégorie (clé du JSON)
      jsonData.forEach((category, questions) async {
        for (var question in questions) {
          // Ajout de chaque question comme document dans une collection portant le nom de la catégorie
          await firestore.collection(category).add(question);
        }
      });

      print("Le JSON a été enregistré avec succès dans Firestore !");
    } catch (e) {
      print("Erreur lors de l'enregistrement : $e");
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Enregistrer JSON dans Firestore"),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: saveJsonToFirestore,
          child: Text("Stocker le JSON"),
        ),
      ),
    );
  }
}
